{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","num1","num2","num3","num4","num5","num6","specialNum","boughtNumber","_useState2","Object","slicedToArray","formData","setFormData","_useState3","_useState4","markSixNumbers","setMarkSixNumbers","_useState5","_useState6","result","setResult","_useState7","_useState8","money","setMoney","_useState9","_useState10","prizeListState","setprizeListState","handleChange","e","prevFormData","objectSpread","defineProperty","target","name","value","finalPrize","normalGoodNum","x","push","parseInt","concat","map","arr","score","i","includes","getPrizeAmount","prizeTotal","prizeArr","stringPrize","filter","totalAmount","reduce","previousValue","currentValue","fullString","length","splice","indexOf","getPrizeTotal","finalResult","react_default","a","createElement","className","number","prizeList","maxLength","onChange","onClick","split","some","alert","nfact","nMinusR","console","log","preventDefault","specialNumber","values","LotteryArr","boughtArr","subset","arra","arra_size","result_set","Math","pow","goodNum","falseNum","window","location","reload","wholeArr","firstHalfLength","firstHalf","lastHalf","forEach","sort","b","j","k","newArr","checkMarkSix","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1068bcd2.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  function checkMarkSix(LotteryArr, boughtArr, specialNum){\n    // Find subset function\n    function subset(arra, arra_size){\n    var result_set = [], \n        result;\n    for(var x = 0; x < Math.pow(2, arra.length); x++){\n    result = [];\n    let i = arra.length - 1; \n     do{\n      if( (x & (1 << i)) !== 0)\n          {\n             result.push(arra[i]);\n           }\n        }  while(i--);\n\n    if( result.length === arra_size)\n       {\n          result_set.push(result);\n        }\n    }\n\n    return result_set; \n}\n\n\n\nLotteryArr.push(specialNum)\n    let goodNum = boughtArr.filter(x => LotteryArr.includes(x))\n    let falseNum = boughtArr.filter(x => !goodNum.includes(x))\n    if(goodNum.length < 3 || goodNum.length === 3 && goodNum.includes(specialNum)){\n        alert('Oops Sorry Good Luck Next Time')\n        window.location.reload()\n    }\n\nif(goodNum.length >= 3 && falseNum.length > 0){\n    let wholeArr = [];\n    for(let i = 0 ; i < goodNum.length -2 ; i++){\n        let firstHalfLength = goodNum.length - i;\n        let firstHalf = subset(goodNum, firstHalfLength)\n        .filter(x => x.length!== 3 || !x.includes(specialNum))\n        let lastHalf = subset(falseNum, 6 - firstHalfLength)\n        firstHalf.forEach(x=> x.sort((a,b) =>a-b));\n        lastHalf.forEach(x=> x.sort((a,b) =>a-b));\n        for(let j = 0 ; j < firstHalf.length; j++){\n            if(lastHalf.length > 0){\n                for(let k =0; k < lastHalf.length;k++){\n                    let newArr = firstHalf[j].concat(lastHalf[k]);\n                    wholeArr.push(newArr)\n                }\n            } else if(firstHalf.length === 6 ){\n                wholeArr.push(firstHalf)\n                \n            }\n\n        }\n    }\n    return wholeArr\n\n}\n\nif(falseNum.length === 0 && goodNum.length === 6){\n  let wholeArr = [[]];\n  wholeArr.push(goodNum)\n    return wholeArr\n}\n\nif(falseNum.length === 0 && goodNum.length > 6){\n    let unsortedWholeArr = subset(goodNum, 6)\n    let wholeArr = unsortedWholeArr.map(x => x.sort((a,b)=> a-b));\n    return wholeArr\n}\n}\n\n\nconst [formData, setFormData] =  useState(\n  {\n    num1: '',\n    num2: '',\n    num3: '',\n    num4: '',\n    num5: '',\n    num6: '',\n    specialNum: '',\n    boughtNumber: ''\n  }\n)\n\nconst [markSixNumbers, setMarkSixNumbers] = useState([]);\nconst [result, setResult] = useState([])\nconst [money, setMoney] = useState(null)\nconst [prizeListState, setprizeListState] = useState('prize-list-hidden')\n      \n      function handleChange(e){\n        setFormData(prevFormData => {\n          return {\n            ...prevFormData,\n            [e.target.name]: e.target.value\n          }\n        })\n      }\n\n      function handleSubmit(e){\n          e.preventDefault()\n\n          let boughtNumber = formData.boughtNumber.split(/,|\\s+/).map(x => parseInt(x, 10)).filter(x=>x)\n          let specialNumber = parseInt(formData.specialNum, 10)\n          let normalGoodNum = [];\n          for(let x = 1 ; x <=  6; x++){\n            normalGoodNum.push(parseInt(formData[`num${x}`],10))\n          }\n          \n          if(boughtNumber.length<6){\n            alert('please enter 6 or more numbers')\n          }\n          if(Object.values(formData).some(value => !value)){\n            alert('please fill in all the boxes')\n          }\n          \n          if(Object.values(formData).some(value => value > 49)){\n            alert(\"Numbers cannot be larger than 49\")\n          }\n\n          if(boughtNumber.some(x=> x>49)) alert(\"Numbers cannot be larger than 49\")\n          setResult(checkMarkSix(normalGoodNum, boughtNumber, specialNumber))\n          normalGoodNum = [];\n          for(let x = 1 ; x <=  6; x++){\n            normalGoodNum.push(parseInt(formData[`num${x}`],10))\n          }\n          setMarkSixNumbers(normalGoodNum)\n          setprizeListState(\"prize-list-shown\")\n      }\n\n      function handleSpend(){\n        let boughtNumber = formData.boughtNumber.split(/,|\\s+/).map(x => parseInt(x, 10)).filter(x=>x)\n        if(boughtNumber.some(x=> x>49)) alert(\"Numbers cannot be larger than 49\")\n        let nfact = boughtNumber.length;\n        let nMinusR = boughtNumber.length - 6;\n        if(boughtNumber.length < 6) return alert('Please enter 6 or more numbers')\n        if(boughtNumber.length === 6) return setMoney(\"10\") \n        let rfact = 720;\n        for(let i = nfact - 1 ; i > 0; i--){\n          nfact = nfact * i;\n        }\n        console.log(nfact);\n        for(let i = nMinusR-1; i > 0; i--){\n          nMinusR = nMinusR * i\n        }\n        return setMoney(`$${nfact / (rfact * nMinusR) * 10}`)\n      }\n\n\n      function getPrizeAmount(){\n        let normalGoodNum = [];\n              for(let x = 1 ; x <=  6; x++){\n                normalGoodNum.push(parseInt(formData[`num${x}`],10))\n              }\n\n              let prize = result.map(arr => {\n                let score = 0\n                for(let i = 0 ; i < 6 ; i++){\n                  if(normalGoodNum.includes(arr[i])){\n                    score += 1\n                    \n                  } else if(arr[i] === parseInt(formData.specialNum,10)){\n                    score += 0.5\n                    \n                  } \n                }\n                switch(score){\n                  case 6:   return \"First Prize\";\n                  case 5.5: return \"Second Prize\";\n                  case 5:   return \"Third Prize\";\n                  case 4.5: return 9600;\n                  case 4:   return 640;\n                  case 3.5: return 320;\n                  case 3:   return 40;\n                }\n              })\n              return prize\n            }\n      \n\n      let finalPrize = getPrizeAmount();\n\n      function getPrizeTotal(prizeArr){\n        let stringPrize = prizeArr.filter(x => typeof x === 'string');\n        let numberPrize = prizeArr.filter(x => typeof x === 'number');\n        let initialValue = 0;\n        let totalAmount = numberPrize.reduce(\n          (previousValue, currentValue) => previousValue + currentValue,\n          initialValue\n        );\n        let fullString = stringPrize.concat(`$${totalAmount}`); \n        if(fullString.filter(x => x === \"Second Prize\").length > 1) {\n          fullString.splice(fullString.indexOf('Second Prize'), fullString.filter(x => x === \"Second Prize\").length, `${fullString.filter(x => x === \"Second Prize\").length}x Second Prize`)\n        }\n\n        if(fullString.filter(x => x === \"Third Prize\").length > 1){\n          fullString.splice(fullString.indexOf('Third Prize'), fullString.filter(x => x === \"Third Prize\").length, `${fullString.filter(x => x === \"Third Prize\").length}x Third Prize`)\n        }\n        return fullString;\n      }\n\n      let prizeTotal = getPrizeTotal(finalPrize);\n      \n  const finalResult = result.map((arr, i) => (\n    <h1 className=\"arr\">\n        {result.length === 1 ? <span>{arr}</span> : arr.map(number => <span className={markSixNumbers.includes(number)? \"good-number\" \n        : number === parseInt(formData.specialNum,10) ? \"good-special-number\"\n        : \"arr-number\"}>{number}</span>)}\n        <span className=\"prize-amount\">{typeof finalPrize[i]=== 'number' ? `$${finalPrize[i]}` : finalPrize[i]}</span>\n        \n    </h1>\n  ))\n\n  const prizeList = <h1 className={prizeListState}>Congratulations! You have won : {prizeTotal.map(x => (\n    <p>{x}</p>\n  ))}</h1> \n\n  \n\n  return (\n    <div>\n      <h1 className=\"title\">Check MarkSix</h1>\n      <div className=\"main\"> \n      <h1>Please enter the MarkSix result :</h1>\n      <input className=\"draw-number\" name=\"num1\" maxLength = \"2\" onChange={handleChange}/>\n      <input className=\"draw-number\" name=\"num2\" maxLength = \"2\" onChange={handleChange}/>\n      <input className=\"draw-number\" name=\"num3\" maxLength = \"2\" onChange={handleChange}/>\n      <input className=\"draw-number\" name=\"num4\" maxLength = \"2\" onChange={handleChange}/>\n      <input className=\"draw-number\" name=\"num5\" maxLength = \"2\" onChange={handleChange}/>\n      <input className=\"draw-number\" name=\"num6\" maxLength = \"2\" onChange={handleChange}/>\n      <h3 className=\"special-number\">Special Number: </h3>\n      <input className=\"draw-number\" name=\"specialNum\" maxLength = \"2\" onChange={handleChange}/>\n      <h1>What numbers have you bought?(Could be more than 6 numbers)</h1><h4>(use ',' or spacebar to split the numbers)</h4>\n      <input className=\"bought-number-field\" name=\"boughtNumber\" onChange={handleChange}/>\n      <button className=\"spend-how-much\" onClick={handleSpend}>How much did I spend</button>\n      <span className=\"money\">{money}</span>\n      <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\n      {prizeList}\n      {finalResult}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}