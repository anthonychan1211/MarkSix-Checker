{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","backendData","setBackendData","useEffect","fetch","then","response","json","res","resultHistory","map","x","i","react_default","a","createElement","Fragment","className","id","onClick","handleSelect","date","no","sno","fillInData","split","parseInt","_useState3","_useState4","resultTable","setResultTable","event","clickedID","currentTarget","console","log","resultNumber","resultSpecialNumber","_loop","setFormData","prev","_objectSpread2","objectSpread","defineProperty","concat","_useState5","num1","num2","num3","num4","num5","num6","specialNum","boughtNumber","_useState6","formData","_useState7","_useState8","markSixNumbers","setMarkSixNumbers","_useState9","_useState10","result","setResult","_useState11","_useState12","money","setMoney","_useState13","_useState14","prizeListState","setprizeListState","handleChange","e","prevFormData","target","name","value","finalPrize","normalGoodNum","push","arr","score","includes","getPrizeAmount","prizeTotal","prizeArr","stringPrize","filter","totalAmount","reduce","previousValue","currentValue","fullString","length","splice","indexOf","getPrizeTotal","finalResult","number","prizeList","type","maxLength","onChange","some","alert","nfact","nMinusR","preventDefault","specialNumber","values","LotteryArr","boughtArr","subset","arra","arra_size","result_set","Math","pow","goodNum","falseNum","window","location","reload","wholeArr","firstHalfLength","firstHalf","lastHalf","forEach","sort","b","j","k","newArr","checkMarkSix","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1f4e745d.chunk.js","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n\n\n  // passing the backend data to react\n  const [ backendData, setBackendData ] = useState([])\n  useEffect(() => {\n    fetch(\"/api\")\n    .then(response => response.json())\n    .then(res => {\n        setBackendData(res);\n      })\n  }, [])\n\n\n\nlet resultHistory = backendData.map((x,i)=>{\n  \n      return <>\n      <div className=\"resultHistoryRow\" id={i} onClick={handleSelect}>\n      <span className=\"resultHistoryCell\" >{x.id}</span>\n      <span className=\"resultHistoryCell\" >{x.date}</span>\n      <span className=\"resultHistoryCell\" >{x.no}</span>\n      <span className=\"resultHistoryCell\" >{x.sno}</span>\n      </div>\n      </>\n    })\n\nlet fillInData = backendData.map(x=> [x.no.split('+'), parseInt(x.sno)])\n\nconst [resultTable, setResultTable] = useState(false)\n\nfunction handleClick(){\n  console.log(resultTable);\n  setResultTable(!resultTable)\n}\n\n\n\nfunction handleSelect(event){\n  let clickedID = event.currentTarget.id;\n  console.log(clickedID);\n  let resultNumber = fillInData[clickedID][0].map(x => parseInt(x))\n  let resultSpecialNumber = fillInData[clickedID][1]\n  for(let i = 0; i < 6; i++){\n    setFormData((prev)=>{\n      return {\n        ...prev,\n        [`num${i+1}`]: resultNumber[i],\n        specialNum: resultSpecialNumber\n      }     \n    }   \n    )}      \n  setResultTable(!resultTable)\n}\n\n  // function of calculating result array\n  function checkMarkSix(LotteryArr, boughtArr, specialNum){\n    // Find subset function\n    function subset(arra, arra_size){\n    var result_set = [], \n        result;\n    for(var x = 0; x < Math.pow(2, arra.length); x++){\n    result = [];\n    let i = arra.length - 1; \n     do{\n      if( (x & (1 << i)) !== 0)\n          {\n             result.push(arra[i]);\n           }\n        }  while(i--);\n\n    if( result.length === arra_size)\n       {\n          result_set.push(result);\n        }\n    }\n\n    return result_set; \n}\n\n\n\nLotteryArr.push(specialNum)\n    let goodNum = boughtArr.filter(x => LotteryArr.includes(x))\n    let falseNum = boughtArr.filter(x => !goodNum.includes(x))\n    if(goodNum.length < 3 || goodNum.length === 3 && goodNum.includes(specialNum)){\n        alert('Oops Sorry Good Luck Next Time')\n        window.location.reload()\n    }\n\nif(goodNum.length >= 3 && falseNum.length > 0){\n    let wholeArr = [];\n    for(let i = 0 ; i < goodNum.length -2 ; i++){\n        let firstHalfLength = goodNum.length - i;\n        let firstHalf = subset(goodNum, firstHalfLength)\n        .filter(x => x.length!== 3 || !x.includes(specialNum))\n        let lastHalf = subset(falseNum, 6 - firstHalfLength)\n        firstHalf.forEach(x=> x.sort((a,b) =>a-b));\n        lastHalf.forEach(x=> x.sort((a,b) =>a-b));\n        for(let j = 0 ; j < firstHalf.length; j++){\n            if(lastHalf.length > 0){\n                for(let k =0; k < lastHalf.length;k++){\n                    let newArr = firstHalf[j].concat(lastHalf[k]);\n                    wholeArr.push(newArr)\n                }\n            } else if(firstHalf.length === 6 ){\n                wholeArr.push(firstHalf)\n                \n            }\n\n        }\n    }\n    return wholeArr\n\n}\n\nif(falseNum.length === 0 && goodNum.length === 6){\n  let wholeArr = [[]];\n  wholeArr.push(goodNum)\n    return wholeArr\n}\n\nif(falseNum.length === 0 && goodNum.length > 6){\n    let unsortedWholeArr = subset(goodNum, 6)\n    let wholeArr = unsortedWholeArr.map(x => x.sort((a,b)=> a-b));\n    return wholeArr\n}\n}\n\n\n// form data control\nconst [formData, setFormData] =  useState(\n  {\n    num1: '',\n    num2: '',\n    num3: '',\n    num4: '',\n    num5: '',\n    num6: '',\n    specialNum: '',\n    boughtNumber: ''\n  }\n)\n\nconst [markSixNumbers, setMarkSixNumbers] = useState([]);\nconst [result, setResult] = useState([])\nconst [money, setMoney] = useState(null)\nconst [prizeListState, setprizeListState] = useState('prize-list-hidden')\n      \n      function handleChange(e){\n        setFormData(prevFormData => {\n          return {\n            ...prevFormData,\n            [e.target.name]: e.target.value\n          }\n        })\n      }\n\n      function handleSubmit(e){\n          e.preventDefault()\n\n          let boughtNumber = formData.boughtNumber.split(/,|\\s+/).map(x => parseInt(x, 10)).filter(x=>x)\n          let specialNumber = parseInt(formData.specialNum, 10)\n          let normalGoodNum = [];\n          for(let x = 1 ; x <=  6; x++){\n            normalGoodNum.push(parseInt(formData[`num${x}`],10))\n          }\n          \n          if(boughtNumber.length<6){\n            alert('please enter 6 or more numbers')\n          }\n          if(Object.values(formData).some(value => !value)){\n            alert('please fill in all the boxes')\n          }\n          \n          if(Object.values(formData).some(value => value > 49)){\n            alert(\"Numbers cannot be larger than 49\")\n          }\n\n          if(boughtNumber.some(x=> x>49)) alert(\"Numbers cannot be larger than 49\")\n          setResult(checkMarkSix(normalGoodNum, boughtNumber, specialNumber))\n          normalGoodNum = [];\n          for(let x = 1 ; x <=  6; x++){\n            normalGoodNum.push(parseInt(formData[`num${x}`],10))\n          }\n          setMarkSixNumbers(normalGoodNum)\n          setprizeListState(\"prize-list-shown\")\n      }\n\n      function handleSpend(){\n        let boughtNumber = formData.boughtNumber.split(/,|\\s+/).map(x => parseInt(x, 10)).filter(x=>x)\n        if(boughtNumber.some(x=> x>49)) alert(\"Numbers cannot be larger than 49\")\n        let nfact = boughtNumber.length;\n        let nMinusR = boughtNumber.length - 6;\n        if(boughtNumber.length < 6) return alert('Please enter 6 or more numbers')\n        if(boughtNumber.length === 6) return setMoney(\"10\") \n        let rfact = 720;\n        for(let i = nfact - 1 ; i > 0; i--){\n          nfact = nfact * i;\n        }\n        console.log(nfact);\n        for(let i = nMinusR-1; i > 0; i--){\n          nMinusR = nMinusR * i\n        }\n        return setMoney(`$${nfact / (rfact * nMinusR) * 10}`)\n      }\n\n\n      function getPrizeAmount(){\n        let normalGoodNum = [];\n              for(let x = 1 ; x <=  6; x++){\n                normalGoodNum.push(parseInt(formData[`num${x}`],10))\n              }\n\n              let prize = result.map(arr => {\n                let score = 0\n                for(let i = 0 ; i < 6 ; i++){\n                  if(normalGoodNum.includes(arr[i])){\n                    score += 1\n                    \n                  } else if(arr[i] === parseInt(formData.specialNum,10)){\n                    score += 0.5\n                    \n                  } \n                }\n                switch(score){\n                  case 6:   return \"First Prize\";\n                  case 5.5: return \"Second Prize\";\n                  case 5:   return \"Third Prize\";\n                  case 4.5: return 9600;\n                  case 4:   return 640;\n                  case 3.5: return 320;\n                  case 3:   return 40;\n                }\n              })\n              return prize\n            }\n      \n\n      let finalPrize = getPrizeAmount();\n\n      function getPrizeTotal(prizeArr){\n        let stringPrize = prizeArr.filter(x => typeof x === 'string');\n        let numberPrize = prizeArr.filter(x => typeof x === 'number');\n        let initialValue = 0;\n        let totalAmount = numberPrize.reduce(\n          (previousValue, currentValue) => previousValue + currentValue,\n          initialValue\n        );\n        let fullString = stringPrize.concat(`$${totalAmount}`); \n        if(fullString.filter(x => x === \"Second Prize\").length > 1) {\n          fullString.splice(fullString.indexOf('Second Prize'), fullString.filter(x => x === \"Second Prize\").length, `${fullString.filter(x => x === \"Second Prize\").length}x Second Prize`)\n        }\n\n        if(fullString.filter(x => x === \"Third Prize\").length > 1){\n          fullString.splice(fullString.indexOf('Third Prize'), fullString.filter(x => x === \"Third Prize\").length, `${fullString.filter(x => x === \"Third Prize\").length}x Third Prize`)\n        }\n        return fullString;\n      }\n\n      let prizeTotal = getPrizeTotal(finalPrize);\n      \n  const finalResult = result.map((arr, i) => (\n    <h1 className=\"arr\">\n        {result.length === 1 ? <span>{arr}</span> : arr.map(number => <span className={markSixNumbers.includes(number)? \"good-number\" \n        : number === parseInt(formData.specialNum,10) ? \"good-special-number\"\n        : \"arr-number\"}>{number}</span>)}\n        <span className=\"prize-amount\">{typeof finalPrize[i]=== 'number' ? `$${finalPrize[i]}` : finalPrize[i]}</span>\n        \n    </h1>\n  ))\n\n  const prizeList = <h1 className={prizeListState}>Congratulations! You have won : {prizeTotal.map(x => (\n    <p>{x}</p>\n  ))}</h1> \n\n  \n  return (\n    <div>\n      <h1 className=\"title\">Check MarkSix</h1>\n      <div className=\"main\"> \n        <h1>Please enter the MarkSix result :</h1>\n        <button className=\"draw-history-button\" onClick={handleClick}>Select From Past 30 Times Draw Record</button>\n        {resultTable? <div>\n        <div className=\"resultHistoryTitle\">\n          <span className=\"resultHistoryCell\">Draw Number</span>\n          <span className=\"resultHistoryCell\">Draw Date</span>\n          <span className=\"resultHistoryCell\">Result</span>\n          <span className=\"resultHistoryCell\">Special Number</span>\n        </div>\n        {resultHistory}\n        </div> : null}\n      \n      <div className=\"draw-number-container\"></div>\n      <input className=\"draw-number\" type=\"number\" name=\"num1\" maxLength = \"2\" value ={formData.num1} onChange={handleChange}/>\n      <input className=\"draw-number\" type=\"number\" name=\"num2\" maxLength = \"2\" value ={formData.num2} onChange={handleChange}/>\n      <input className=\"draw-number\" type=\"number\" name=\"num3\" maxLength = \"2\" value ={formData.num3} onChange={handleChange}/>\n      <input className=\"draw-number\" type=\"number\" name=\"num4\" maxLength = \"2\" value ={formData.num4} onChange={handleChange}/>\n      <input className=\"draw-number\" type=\"number\" name=\"num5\" maxLength = \"2\" value ={formData.num5} onChange={handleChange}/>\n      <input className=\"draw-number\" type=\"number\" name=\"num6\" maxLength = \"2\" value ={formData.num6} onChange={handleChange}/>\n      <h3 className=\"special-number\">Special Number: </h3>\n      <input className=\"draw-number\" type=\"number\" name=\"specialNum\" maxLength = \"2\" value ={formData.specialNum} onChange={handleChange}/>\n      <h1>What numbers have you bought?(Could be more than 6 numbers)</h1><h4>(use ',' or spacebar to split the numbers)</h4>\n      <input className=\"bought-number-field\" name=\"boughtNumber\" onChange={handleChange}/>\n      <button className=\"spend-how-much\" onClick={handleSpend}>How much did I spend</button>\n      <span className=\"money\">{money}</span>\n      <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\n      {prizeList}\n      {finalResult}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}